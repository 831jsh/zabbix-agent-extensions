#!/usr/bin/env python3

# Marc Schoechlin <ms@256bit.org>

import re
import os
import sys
import argparse
import subprocess

####################################################################################

# https://github.com/v-zhuravlev/zbx-smartctl
# https://www.smartmontools.org/wiki/Supported_RAID-Controllers
# https://blog.kokolor.es/zabbix-check-smart-s-m-a-r-t-hdd-monitoring-mit-zabbix/
# https://wiki.ubuntuusers.de/Festplattenstatus/
# http://xmodulo.com/check-hard-disk-health-linux-smartmontools.html
####################################################################################
#### HELPERS

def get_health(device):
    cmd = "smartctl -H /dev/%s" % device
    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    out, err = process.communicate()

    result = None
    for line in out.decode('utf8').splitlines():
        m = re.match(r"^SMART overall-health self-assessment test result:\s*(.*)$", line)
        if not m:
            continue
        result = m.group(1)

    if result is None or not "PASSED" in result:
        result = "FAILED: no health result"
        sys.stderr.write("%s :: get_health :: %s:\n--\n%s\n%s\n--\n" % (__file__,cmd,out.decode('utf8'), err.decode('utf8')))

    print(result)


####################################################################################
#### MAIN

parser = argparse.ArgumentParser(
    description='gather smart data'
)

parser.add_argument(
    '--debug',
    help='Output debug information',
    action='store_true',
)

parser.add_argument(
    '--health',
    help='Health information',
    action='store_true',
)

parser.add_argument(
   '--device',
   nargs='?',
   type=str,
   help='the hardware device',
   default=None,
   required=True,
)

args = parser.parse_args()
args.device = re.sub("/dev/+", "", args.device)

if args.health:
    get_health(args.device)

# vim: ai et ts=2 shiftwidth=2 expandtab
